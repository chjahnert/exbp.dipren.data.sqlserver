//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EXBP.Dipren.Data.SqlServer {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SqlServerEngineDataStoreImplementationResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlServerEngineDataStoreImplementationResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EXBP.Dipren.Data.SqlServer.SqlServerEngineDataStoreImplementationResources", typeof(SqlServerEngineDataStoreImplementationResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///  COUNT_BIG(1) AS [count]
        ///FROM
        ///  [dipren].[jobs];.
        /// </summary>
        internal static string QueryCountJobs {
            get {
                return ResourceManager.GetString("QueryCountJobs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///  COUNT(1) AS [count]
        ///FROM
        ///  [dipren].[partitions]
        ///WHERE
        ///  ([id] = @id);.
        /// </summary>
        internal static string QueryDoesPartitionExist {
            get {
                return ResourceManager.GetString("QueryDoesPartitionExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dipren].[jobs]
        ///(
        ///  [id],
        ///  [created],
        ///  [updated],
        ///  [batch_size],
        ///  [timeout],
        ///  [clock_drift],
        ///  [started],
        ///  [completed],
        ///  [state],
        ///  [error]
        ///)
        ///VALUES
        ///(
        ///  @id,
        ///  @created,
        ///  @updated,
        ///  @batch_size,
        ///  @timeout,
        ///  @clock_drift,
        ///  @started,
        ///  @completed,
        ///  @state,
        ///  @error
        ///);.
        /// </summary>
        internal static string QueryInsertJob {
            get {
                return ResourceManager.GetString("QueryInsertJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dipren].[partitions]
        ///(
        ///  [id],
        ///  [job_id],
        ///  [created],
        ///  [updated],
        ///  [owner],
        ///  [first],
        ///  [last],
        ///  [is_inclusive],
        ///  [position],
        ///  [processed],
        ///  [remaining],
        ///  [throughput],
        ///  [is_completed],
        ///  [is_split_requested]
        ///)
        ///VALUES
        ///(
        ///  @id,
        ///  @job_id,
        ///  @created,
        ///  @updated,
        ///  @owner,
        ///  @first,
        ///  @last,
        ///  @is_inclusive,
        ///  @position,
        ///  @processed,
        ///  @remaining,
        ///  @throughput,
        ///  @is_completed,
        ///  @is_split_requested
        ///);.
        /// </summary>
        internal static string QueryInsertPartition {
            get {
                return ResourceManager.GetString("QueryInsertPartition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE
        ///  [dipren].[jobs]
        ///SET
        ///  [updated] = @timestamp,
        ///  [completed] = @timestamp,
        ///  [state] = @state
        ///OUTPUT
        ///  INSERTED.[id] AS [id],
        ///  INSERTED.[created] AS [created],
        ///  INSERTED.[updated] AS [updated],
        ///  INSERTED.[batch_size] AS [batch_size],
        ///  INSERTED.[timeout] AS [timeout],
        ///  INSERTED.[clock_drift] AS [clock_drift],
        ///  INSERTED.[started] AS [started],
        ///  INSERTED.[completed] AS [completed],
        ///  INSERTED.[state] AS [state],
        ///  INSERTED.[error] AS [error]
        ///WHERE
        ///  ([id] = @id);.
        /// </summary>
        internal static string QueryMarkJobAsCompleted {
            get {
                return ResourceManager.GetString("QueryMarkJobAsCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE
        ///  [dipren].[jobs]
        ///SET
        ///  [updated] = @timestamp,
        ///  [state] = @state,
        ///  [error] = @error
        ///OUTPUT
        ///  INSERTED.[id] AS [id],
        ///  INSERTED.[created] AS [created],
        ///  INSERTED.[updated] AS [updated],
        ///  INSERTED.[batch_size] AS [batch_size],
        ///  INSERTED.[timeout] AS [timeout],
        ///  INSERTED.[clock_drift] AS [clock_drift],
        ///  INSERTED.[started] AS [started],
        ///  INSERTED.[completed] AS [completed],
        ///  INSERTED.[state] AS [state],
        ///  INSERTED.[error] AS [error]
        ///WHERE
        ///  ([id] = @id);.
        /// </summary>
        internal static string QueryMarkJobAsFailed {
            get {
                return ResourceManager.GetString("QueryMarkJobAsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE
        ///  [dipren].[jobs]
        ///SET
        ///  [updated] = @timestamp,
        ///  [state] = @state
        ///OUTPUT
        ///  INSERTED.[id] AS [id],
        ///  INSERTED.[created] AS [created],
        ///  INSERTED.[updated] AS [updated],
        ///  INSERTED.[batch_size] AS [batch_size],
        ///  INSERTED.[timeout] AS [timeout],
        ///  INSERTED.[clock_drift] AS [clock_drift],
        ///  INSERTED.[started] AS [started],
        ///  INSERTED.[completed] AS [completed],
        ///  INSERTED.[state] AS [state],
        ///  INSERTED.[error] AS [error]
        ///WHERE
        ///  ([id] = @id);.
        /// </summary>
        internal static string QueryMarkJobAsReady {
            get {
                return ResourceManager.GetString("QueryMarkJobAsReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE
        ///  [dipren].[jobs]
        ///SET
        ///  [updated] = @timestamp,
        ///  [started] = @timestamp,
        ///  [state] = @state
        ///OUTPUT
        ///  INSERTED.[id] AS [id],
        ///  INSERTED.[created] AS [created],
        ///  INSERTED.[updated] AS [updated],
        ///  INSERTED.[batch_size] AS [batch_size],
        ///  INSERTED.[timeout] AS [timeout],
        ///  INSERTED.[clock_drift] AS [clock_drift],
        ///  INSERTED.[started] AS [started],
        ///  INSERTED.[completed] AS [completed],
        ///  INSERTED.[state] AS [state],
        ///  INSERTED.[error] AS [error]
        ///WHERE
        ///  ([id] = @id);.
        /// </summary>
        internal static string QueryMarkJobAsStarted {
            get {
                return ResourceManager.GetString("QueryMarkJobAsStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE
        ///  [dipren].[partitions]
        ///SET
        ///  [updated] = @updated,
        ///  [position] = @position,
        ///  [processed] = @processed,
        ///  [remaining] = @remaining,
        ///  [throughput] = @throughput,
        ///  [is_completed] = @completed
        ///OUTPUT
        ///  INSERTED.[id] AS [id],
        ///  INSERTED.[job_id] AS [job_id],
        ///  INSERTED.[created] AS [created],
        ///  INSERTED.[updated] AS [updated],
        ///  INSERTED.[owner] AS [owner],
        ///  INSERTED.[first] AS [first],
        ///  INSERTED.[last] AS [last],
        ///  INSERTED.[is_inclusive] AS [is_inclusive],
        ///  INSERTED.[position]  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QueryReportProgress {
            get {
                return ResourceManager.GetString("QueryReportProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///  [id] AS &quot;id&quot;,
        ///  [created] AS [created],
        ///  [updated] AS [updated],
        ///  [batch_size] AS [batch_size],
        ///  [timeout] AS [timeout],
        ///  [clock_drift] AS [clock_drift],
        ///  [started] AS [started],
        ///  [completed] AS [completed],
        ///  [state] AS [state],
        ///  [error] AS [error]
        ///FROM
        ///  [dipren].[jobs]
        ///WHERE
        ///  ([id] = @id);.
        /// </summary>
        internal static string QueryRetrieveJobById {
            get {
                return ResourceManager.GetString("QueryRetrieveJobById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///  [id] AS [id],
        ///  [job_id] AS [job_id],
        ///  [created] AS [created],
        ///  [updated] AS [updated],
        ///  [owner] AS [owner],
        ///  [first] AS [first],
        ///  [last] AS [last],
        ///  [is_inclusive] AS [is_inclusive],
        ///  [position] AS [position],
        ///  [processed] AS [processed],
        ///  [remaining] AS [remaining],
        ///  [throughput] AS [throughput],
        ///  [is_completed] AS [is_completed],
        ///  [is_split_requested] AS [is_split_requested]
        ///FROM
        ///  [dipren].[partitions]
        ///WHERE
        ///  ([id] = @id);.
        /// </summary>
        internal static string QueryRetrievePartitionById {
            get {
                return ResourceManager.GetString("QueryRetrievePartitionById", resourceCulture);
            }
        }
    }
}
